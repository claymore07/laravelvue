<?php

namespace App;

use Illuminate\Database\Eloquent\Model;

/**
 * App\File
 *
 * @property int $id
 * @property string $name
 * @property string $fileableType
 * @property int $fileableId
 * @property \Illuminate\Support\Carbon|null $createdAt
 * @property \Illuminate\Support\Carbon|null $updatedAt
 * @property-read \Illuminate\Database\Eloquent\Model|\Eloquent $fileable
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Files newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Files newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Files query()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Files whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Files whereFileableId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Files whereFileableType($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Files whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Files whereName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Files whereUpdatedAt($value)
 * @mixin \Eloquent
 */
class Files extends Model
{
    //
    protected $table='files';
    protected $fillable = ['name', 'fileable_type', 'fileable_id'];


    public function __construct(array $attributes = [])
    {
        parent::__construct($attributes);
    }
    //backward
    public function fileable(){
        return $this->morphTo();
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::deleted(function ($item){

            $filePath = public_path('files/papers/').$item->name;
            if(file_exists($filePath)){
                @unlink($filePath);
            }

        });
    }


}
